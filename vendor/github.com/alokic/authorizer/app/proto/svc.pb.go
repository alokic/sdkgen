// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: svc.proto

package proto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Svc struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	CreatedAt            int64    `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64    `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	State                string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	AuthenticationType   string   `protobuf:"bytes,7,opt,name=authentication_type,json=authenticationType,proto3" json:"authentication_type,omitempty"`
	AuthenticationKey    string   `protobuf:"bytes,8,opt,name=authentication_key,json=authenticationKey,proto3" json:"authentication_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Svc) Reset()         { *m = Svc{} }
func (m *Svc) String() string { return proto.CompactTextString(m) }
func (*Svc) ProtoMessage()    {}
func (*Svc) Descriptor() ([]byte, []int) {
	return fileDescriptor_svc_7b26b6f249032dc3, []int{0}
}
func (m *Svc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Svc.Unmarshal(m, b)
}
func (m *Svc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Svc.Marshal(b, m, deterministic)
}
func (dst *Svc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Svc.Merge(dst, src)
}
func (m *Svc) XXX_Size() int {
	return xxx_messageInfo_Svc.Size(m)
}
func (m *Svc) XXX_DiscardUnknown() {
	xxx_messageInfo_Svc.DiscardUnknown(m)
}

var xxx_messageInfo_Svc proto.InternalMessageInfo

type SvcBlockRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SvcBlockRequest) Reset()         { *m = SvcBlockRequest{} }
func (m *SvcBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SvcBlockRequest) ProtoMessage()    {}
func (*SvcBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_svc_7b26b6f249032dc3, []int{1}
}
func (m *SvcBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SvcBlockRequest.Unmarshal(m, b)
}
func (m *SvcBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SvcBlockRequest.Marshal(b, m, deterministic)
}
func (dst *SvcBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SvcBlockRequest.Merge(dst, src)
}
func (m *SvcBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SvcBlockRequest.Size(m)
}
func (m *SvcBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SvcBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SvcBlockRequest proto.InternalMessageInfo

type SvcBlockReply struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SvcBlockReply) Reset()         { *m = SvcBlockReply{} }
func (m *SvcBlockReply) String() string { return proto.CompactTextString(m) }
func (*SvcBlockReply) ProtoMessage()    {}
func (*SvcBlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_svc_7b26b6f249032dc3, []int{2}
}
func (m *SvcBlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SvcBlockReply.Unmarshal(m, b)
}
func (m *SvcBlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SvcBlockReply.Marshal(b, m, deterministic)
}
func (dst *SvcBlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SvcBlockReply.Merge(dst, src)
}
func (m *SvcBlockReply) XXX_Size() int {
	return xxx_messageInfo_SvcBlockReply.Size(m)
}
func (m *SvcBlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SvcBlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_SvcBlockReply proto.InternalMessageInfo

func (m *SvcBlockReply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type SvcActivateRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SvcActivateRequest) Reset()         { *m = SvcActivateRequest{} }
func (m *SvcActivateRequest) String() string { return proto.CompactTextString(m) }
func (*SvcActivateRequest) ProtoMessage()    {}
func (*SvcActivateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_svc_7b26b6f249032dc3, []int{3}
}
func (m *SvcActivateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SvcActivateRequest.Unmarshal(m, b)
}
func (m *SvcActivateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SvcActivateRequest.Marshal(b, m, deterministic)
}
func (dst *SvcActivateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SvcActivateRequest.Merge(dst, src)
}
func (m *SvcActivateRequest) XXX_Size() int {
	return xxx_messageInfo_SvcActivateRequest.Size(m)
}
func (m *SvcActivateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SvcActivateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SvcActivateRequest proto.InternalMessageInfo

type SvcActivateReply struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SvcActivateReply) Reset()         { *m = SvcActivateReply{} }
func (m *SvcActivateReply) String() string { return proto.CompactTextString(m) }
func (*SvcActivateReply) ProtoMessage()    {}
func (*SvcActivateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_svc_7b26b6f249032dc3, []int{4}
}
func (m *SvcActivateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SvcActivateReply.Unmarshal(m, b)
}
func (m *SvcActivateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SvcActivateReply.Marshal(b, m, deterministic)
}
func (dst *SvcActivateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SvcActivateReply.Merge(dst, src)
}
func (m *SvcActivateReply) XXX_Size() int {
	return xxx_messageInfo_SvcActivateReply.Size(m)
}
func (m *SvcActivateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SvcActivateReply.DiscardUnknown(m)
}

var xxx_messageInfo_SvcActivateReply proto.InternalMessageInfo

func (m *SvcActivateReply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Svc)(nil), "proto.Svc")
	proto.RegisterType((*SvcBlockRequest)(nil), "proto.SvcBlockRequest")
	proto.RegisterType((*SvcBlockReply)(nil), "proto.SvcBlockReply")
	proto.RegisterType((*SvcActivateRequest)(nil), "proto.SvcActivateRequest")
	proto.RegisterType((*SvcActivateReply)(nil), "proto.SvcActivateReply")
}

func init() { proto.RegisterFile("svc.proto", fileDescriptor_svc_7b26b6f249032dc3) }

var fileDescriptor_svc_7b26b6f249032dc3 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x2d, 0x14, 0x84, 0x49, 0xfc, 0xb7, 0x1a, 0xb3, 0x31, 0x31, 0x12, 0x2e, 0x12, 0x12,
	0xe0, 0xe0, 0xcd, 0x1b, 0x5e, 0xbd, 0x15, 0xef, 0x64, 0xd9, 0x8e, 0x65, 0x43, 0xdb, 0xad, 0xed,
	0x6c, 0x93, 0x7e, 0x03, 0x3f, 0x86, 0xdf, 0xd3, 0x8b, 0x61, 0x5a, 0x35, 0xe5, 0xc0, 0x69, 0xe7,
	0xbd, 0xf7, 0xdb, 0x77, 0x98, 0x81, 0x61, 0x51, 0xea, 0x79, 0x96, 0x5b, 0xb2, 0xa2, 0xc7, 0xcf,
	0xdd, 0x2c, 0x32, 0xb4, 0x75, 0x9b, 0xb9, 0xb6, 0xc9, 0x22, 0xb2, 0x91, 0x5d, 0xb0, 0xbd, 0x71,
	0xef, 0xac, 0x58, 0xf0, 0x54, 0xff, 0x1a, 0x7f, 0x7b, 0xd0, 0x5d, 0x95, 0x5a, 0x9c, 0x43, 0xc7,
	0x84, 0xd2, 0x1b, 0x79, 0x13, 0x3f, 0xe8, 0x98, 0x50, 0x08, 0xf0, 0x53, 0x95, 0xa0, 0xec, 0x8c,
	0xbc, 0xc9, 0x30, 0xe0, 0x59, 0xdc, 0x42, 0x3f, 0xb4, 0x89, 0x32, 0xa9, 0xec, 0xb2, 0xdb, 0x28,
	0x71, 0x0f, 0xa0, 0x73, 0x54, 0x84, 0xe1, 0x5a, 0x91, 0xf4, 0x47, 0xde, 0xa4, 0x1b, 0x0c, 0x1b,
	0x67, 0x49, 0xfb, 0xd8, 0x65, 0xe1, 0x6f, 0xdc, 0xab, 0xe3, 0xc6, 0x59, 0x92, 0xb8, 0x81, 0x5e,
	0x41, 0x8a, 0x50, 0xf6, 0xb9, 0xb4, 0x16, 0x62, 0x01, 0xd7, 0xca, 0xd1, 0x16, 0x53, 0x32, 0x5a,
	0x91, 0xb1, 0xe9, 0x9a, 0xaa, 0x0c, 0xe5, 0x29, 0x33, 0xa2, 0x1d, 0xbd, 0x55, 0x19, 0x8a, 0x19,
	0x1c, 0xb8, 0xeb, 0x1d, 0x56, 0x72, 0xc0, 0xfc, 0x55, 0x3b, 0x79, 0xc5, 0xea, 0xd9, 0xff, 0xfc,
	0x7a, 0x38, 0x19, 0x3f, 0xc2, 0xc5, 0xaa, 0xd4, 0x2f, 0xb1, 0xd5, 0xbb, 0x00, 0x3f, 0x1c, 0x16,
	0x74, 0xb8, 0x88, 0x3f, 0xf0, 0xec, 0x1f, 0xcc, 0xe2, 0x6a, 0xbf, 0x8b, 0x1c, 0x0b, 0x17, 0x13,
	0xa3, 0x83, 0xa0, 0x51, 0xe3, 0x29, 0x88, 0x55, 0xa9, 0x97, 0x9a, 0x4c, 0xa9, 0x08, 0x8f, 0x97,
	0x4e, 0xe1, 0xb2, 0xc5, 0x1e, 0xe9, 0xdd, 0xf4, 0xf9, 0x5c, 0x4f, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xe8, 0x13, 0x3f, 0xa9, 0xf1, 0x01, 0x00, 0x00,
}
