# coding: utf-8

"""
    Qubole API Sepcification

    Operations, requests and responses  # noqa: E501

    OpenAPI spec version: v1.11.0
    Contact: support@qubole.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class CreateClusterClusterRequestEbsUpscalingConfig(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'absolute_free_space_threshold': 'float',
        'max_ebs_volume_count': 'float',
        'percent_free_space_threshold': 'float',
        'sampling_interval': 'float',
        'sampling_window': 'float'
    }

    attribute_map = {
        'absolute_free_space_threshold': 'absolute_free_space_threshold',
        'max_ebs_volume_count': 'max_ebs_volume_count',
        'percent_free_space_threshold': 'percent_free_space_threshold',
        'sampling_interval': 'sampling_interval',
        'sampling_window': 'sampling_window'
    }

    def __init__(self, absolute_free_space_threshold=None, max_ebs_volume_count=None, percent_free_space_threshold=None, sampling_interval=None, sampling_window=None):  # noqa: E501
        """CreateClusterClusterRequestEbsUpscalingConfig - a model defined in OpenAPI"""  # noqa: E501

        self._absolute_free_space_threshold = None
        self._max_ebs_volume_count = None
        self._percent_free_space_threshold = None
        self._sampling_interval = None
        self._sampling_window = None
        self.discriminator = None

        if absolute_free_space_threshold is not None:
            self.absolute_free_space_threshold = absolute_free_space_threshold
        if max_ebs_volume_count is not None:
            self.max_ebs_volume_count = max_ebs_volume_count
        if percent_free_space_threshold is not None:
            self.percent_free_space_threshold = percent_free_space_threshold
        if sampling_interval is not None:
            self.sampling_interval = sampling_interval
        if sampling_window is not None:
            self.sampling_window = sampling_window

    @property
    def absolute_free_space_threshold(self):
        """Gets the absolute_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501


        :return: The absolute_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :rtype: float
        """
        return self._absolute_free_space_threshold

    @absolute_free_space_threshold.setter
    def absolute_free_space_threshold(self, absolute_free_space_threshold):
        """Sets the absolute_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.


        :param absolute_free_space_threshold: The absolute_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :type: float
        """

        self._absolute_free_space_threshold = absolute_free_space_threshold

    @property
    def max_ebs_volume_count(self):
        """Gets the max_ebs_volume_count of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501


        :return: The max_ebs_volume_count of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :rtype: float
        """
        return self._max_ebs_volume_count

    @max_ebs_volume_count.setter
    def max_ebs_volume_count(self, max_ebs_volume_count):
        """Sets the max_ebs_volume_count of this CreateClusterClusterRequestEbsUpscalingConfig.


        :param max_ebs_volume_count: The max_ebs_volume_count of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :type: float
        """

        self._max_ebs_volume_count = max_ebs_volume_count

    @property
    def percent_free_space_threshold(self):
        """Gets the percent_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501


        :return: The percent_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :rtype: float
        """
        return self._percent_free_space_threshold

    @percent_free_space_threshold.setter
    def percent_free_space_threshold(self, percent_free_space_threshold):
        """Sets the percent_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.


        :param percent_free_space_threshold: The percent_free_space_threshold of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :type: float
        """

        self._percent_free_space_threshold = percent_free_space_threshold

    @property
    def sampling_interval(self):
        """Gets the sampling_interval of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501


        :return: The sampling_interval of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :rtype: float
        """
        return self._sampling_interval

    @sampling_interval.setter
    def sampling_interval(self, sampling_interval):
        """Sets the sampling_interval of this CreateClusterClusterRequestEbsUpscalingConfig.


        :param sampling_interval: The sampling_interval of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :type: float
        """

        self._sampling_interval = sampling_interval

    @property
    def sampling_window(self):
        """Gets the sampling_window of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501


        :return: The sampling_window of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :rtype: float
        """
        return self._sampling_window

    @sampling_window.setter
    def sampling_window(self, sampling_window):
        """Sets the sampling_window of this CreateClusterClusterRequestEbsUpscalingConfig.


        :param sampling_window: The sampling_window of this CreateClusterClusterRequestEbsUpscalingConfig.  # noqa: E501
        :type: float
        """

        self._sampling_window = sampling_window

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateClusterClusterRequestEbsUpscalingConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
