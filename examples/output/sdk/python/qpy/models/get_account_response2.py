# coding: utf-8

"""
    Quubole API Sepcification

    Operations, requests and responses  # noqa: E501

    OpenAPI spec version: v2.0
    Contact: support@qubole.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class GetAccountResponse2(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'authorized_ssh_key': 'str',
        'compute_access_key': 'str',
        'compute_secret_key': 'str',
        'compute_type': 'str',
        'compute_validated': 'bool',
        'id': 'float',
        'idle_session_timeout': 'float',
        'is_aws_role_enabled': 'bool',
        'name': 'str',
        'storage_access_key': 'str',
        'storage_location': 'str',
        'storage_secret_key': 'str',
        'storage_type': 'str',
        'storage_validated': 'bool'
    }

    attribute_map = {
        'authorized_ssh_key': 'authorized_ssh_key',
        'compute_access_key': 'compute_access_key',
        'compute_secret_key': 'compute_secret_key',
        'compute_type': 'compute_type',
        'compute_validated': 'compute_validated',
        'id': 'id',
        'idle_session_timeout': 'idle_session_timeout',
        'is_aws_role_enabled': 'is_aws_role_enabled',
        'name': 'name',
        'storage_access_key': 'storage_access_key',
        'storage_location': 'storage_location',
        'storage_secret_key': 'storage_secret_key',
        'storage_type': 'storage_type',
        'storage_validated': 'storage_validated'
    }

    def __init__(self, authorized_ssh_key=None, compute_access_key=None, compute_secret_key=None, compute_type=None, compute_validated=None, id=None, idle_session_timeout=None, is_aws_role_enabled=None, name=None, storage_access_key=None, storage_location=None, storage_secret_key=None, storage_type=None, storage_validated=None):  # noqa: E501
        """GetAccountResponse2 - a model defined in OpenAPI"""  # noqa: E501

        self._authorized_ssh_key = None
        self._compute_access_key = None
        self._compute_secret_key = None
        self._compute_type = None
        self._compute_validated = None
        self._id = None
        self._idle_session_timeout = None
        self._is_aws_role_enabled = None
        self._name = None
        self._storage_access_key = None
        self._storage_location = None
        self._storage_secret_key = None
        self._storage_type = None
        self._storage_validated = None
        self.discriminator = None

        if authorized_ssh_key is not None:
            self.authorized_ssh_key = authorized_ssh_key
        if compute_access_key is not None:
            self.compute_access_key = compute_access_key
        if compute_secret_key is not None:
            self.compute_secret_key = compute_secret_key
        if compute_type is not None:
            self.compute_type = compute_type
        if compute_validated is not None:
            self.compute_validated = compute_validated
        if id is not None:
            self.id = id
        if idle_session_timeout is not None:
            self.idle_session_timeout = idle_session_timeout
        if is_aws_role_enabled is not None:
            self.is_aws_role_enabled = is_aws_role_enabled
        if name is not None:
            self.name = name
        if storage_access_key is not None:
            self.storage_access_key = storage_access_key
        if storage_location is not None:
            self.storage_location = storage_location
        if storage_secret_key is not None:
            self.storage_secret_key = storage_secret_key
        if storage_type is not None:
            self.storage_type = storage_type
        if storage_validated is not None:
            self.storage_validated = storage_validated

    @property
    def authorized_ssh_key(self):
        """Gets the authorized_ssh_key of this GetAccountResponse2.  # noqa: E501


        :return: The authorized_ssh_key of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._authorized_ssh_key

    @authorized_ssh_key.setter
    def authorized_ssh_key(self, authorized_ssh_key):
        """Sets the authorized_ssh_key of this GetAccountResponse2.


        :param authorized_ssh_key: The authorized_ssh_key of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._authorized_ssh_key = authorized_ssh_key

    @property
    def compute_access_key(self):
        """Gets the compute_access_key of this GetAccountResponse2.  # noqa: E501


        :return: The compute_access_key of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._compute_access_key

    @compute_access_key.setter
    def compute_access_key(self, compute_access_key):
        """Sets the compute_access_key of this GetAccountResponse2.


        :param compute_access_key: The compute_access_key of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._compute_access_key = compute_access_key

    @property
    def compute_secret_key(self):
        """Gets the compute_secret_key of this GetAccountResponse2.  # noqa: E501


        :return: The compute_secret_key of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._compute_secret_key

    @compute_secret_key.setter
    def compute_secret_key(self, compute_secret_key):
        """Sets the compute_secret_key of this GetAccountResponse2.


        :param compute_secret_key: The compute_secret_key of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._compute_secret_key = compute_secret_key

    @property
    def compute_type(self):
        """Gets the compute_type of this GetAccountResponse2.  # noqa: E501


        :return: The compute_type of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this GetAccountResponse2.


        :param compute_type: The compute_type of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._compute_type = compute_type

    @property
    def compute_validated(self):
        """Gets the compute_validated of this GetAccountResponse2.  # noqa: E501


        :return: The compute_validated of this GetAccountResponse2.  # noqa: E501
        :rtype: bool
        """
        return self._compute_validated

    @compute_validated.setter
    def compute_validated(self, compute_validated):
        """Sets the compute_validated of this GetAccountResponse2.


        :param compute_validated: The compute_validated of this GetAccountResponse2.  # noqa: E501
        :type: bool
        """

        self._compute_validated = compute_validated

    @property
    def id(self):
        """Gets the id of this GetAccountResponse2.  # noqa: E501


        :return: The id of this GetAccountResponse2.  # noqa: E501
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetAccountResponse2.


        :param id: The id of this GetAccountResponse2.  # noqa: E501
        :type: float
        """

        self._id = id

    @property
    def idle_session_timeout(self):
        """Gets the idle_session_timeout of this GetAccountResponse2.  # noqa: E501


        :return: The idle_session_timeout of this GetAccountResponse2.  # noqa: E501
        :rtype: float
        """
        return self._idle_session_timeout

    @idle_session_timeout.setter
    def idle_session_timeout(self, idle_session_timeout):
        """Sets the idle_session_timeout of this GetAccountResponse2.


        :param idle_session_timeout: The idle_session_timeout of this GetAccountResponse2.  # noqa: E501
        :type: float
        """

        self._idle_session_timeout = idle_session_timeout

    @property
    def is_aws_role_enabled(self):
        """Gets the is_aws_role_enabled of this GetAccountResponse2.  # noqa: E501


        :return: The is_aws_role_enabled of this GetAccountResponse2.  # noqa: E501
        :rtype: bool
        """
        return self._is_aws_role_enabled

    @is_aws_role_enabled.setter
    def is_aws_role_enabled(self, is_aws_role_enabled):
        """Sets the is_aws_role_enabled of this GetAccountResponse2.


        :param is_aws_role_enabled: The is_aws_role_enabled of this GetAccountResponse2.  # noqa: E501
        :type: bool
        """

        self._is_aws_role_enabled = is_aws_role_enabled

    @property
    def name(self):
        """Gets the name of this GetAccountResponse2.  # noqa: E501


        :return: The name of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetAccountResponse2.


        :param name: The name of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def storage_access_key(self):
        """Gets the storage_access_key of this GetAccountResponse2.  # noqa: E501


        :return: The storage_access_key of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._storage_access_key

    @storage_access_key.setter
    def storage_access_key(self, storage_access_key):
        """Sets the storage_access_key of this GetAccountResponse2.


        :param storage_access_key: The storage_access_key of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._storage_access_key = storage_access_key

    @property
    def storage_location(self):
        """Gets the storage_location of this GetAccountResponse2.  # noqa: E501


        :return: The storage_location of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location):
        """Sets the storage_location of this GetAccountResponse2.


        :param storage_location: The storage_location of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._storage_location = storage_location

    @property
    def storage_secret_key(self):
        """Gets the storage_secret_key of this GetAccountResponse2.  # noqa: E501


        :return: The storage_secret_key of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._storage_secret_key

    @storage_secret_key.setter
    def storage_secret_key(self, storage_secret_key):
        """Sets the storage_secret_key of this GetAccountResponse2.


        :param storage_secret_key: The storage_secret_key of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._storage_secret_key = storage_secret_key

    @property
    def storage_type(self):
        """Gets the storage_type of this GetAccountResponse2.  # noqa: E501


        :return: The storage_type of this GetAccountResponse2.  # noqa: E501
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this GetAccountResponse2.


        :param storage_type: The storage_type of this GetAccountResponse2.  # noqa: E501
        :type: str
        """

        self._storage_type = storage_type

    @property
    def storage_validated(self):
        """Gets the storage_validated of this GetAccountResponse2.  # noqa: E501


        :return: The storage_validated of this GetAccountResponse2.  # noqa: E501
        :rtype: bool
        """
        return self._storage_validated

    @storage_validated.setter
    def storage_validated(self, storage_validated):
        """Sets the storage_validated of this GetAccountResponse2.


        :param storage_validated: The storage_validated of this GetAccountResponse2.  # noqa: E501
        :type: bool
        """

        self._storage_validated = storage_validated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetAccountResponse2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
